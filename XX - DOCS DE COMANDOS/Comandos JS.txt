É importante se atentar com a escrita de letras maiúsculas ou minúsculas, pois o JavaScript entende como letras diferentes

// - comentário em uma linha
/* - comentário em bloco
== - representa uma comparação entre 2 valores
; no final de uma linha de código é opcional
Int - inteiro
Float - inteiro, decimais
	
	variável1 = valor1
	variável1 == valor2
	o console vai entregar se é true ou false

alert("texto") - envia o texto em um pop up no navegador 
console.log - imprimi um valor determinado na tela
	console.log(`Olá, ${variável}!`) - essa é uma forma de digitar uma variável dentro de um texto.
	console.log('Olá, ' + variável + '!') - o resultado é o mesmo que o comando de cima 

let - variáveis que podem ser substituídos, não precisa ter um valor declarado inicialmente
	
	let (nome da variável) = (valor)

const - variáveis que não podem ser substituídos a menos que declaremos no código e também devem ser iniciados com um valor definidos
	
	const (nome da variável) = (valor)

typeof - é um comando para o computador retornar o tipo de um valor digitado ou de uma variável
	
	let fruta = maçã
	let animal
	let verdadeiro = true
	let primeiroNumero = '5'

	typeof(8)
	> number

	typeof("maçã")
	> string

	typeof(fruta)
	> string

	typeof(animal)
	>'undefined' (variável sem valor declarado)

	typeof(verdadeiro)
	> 'boolean' (verdadeiro ou falso)

	typeof(primeiroNumero)
	> string (o computador entende que um valor dentro de '' é uma string (texto), independente se tiver um número)


parseInt - converte o valor em números inteiros
parseFloat - converte o valor em número decimais e inteiros
	
	parseInt(variável desejada)
	> (valor variável)
	
	parseInt('5')
	> 5

	parseInt(5)
	> 5
	
	parseInt('nome')
	> NaN (o computador não entende caso o valor não seja um número)
	

Arrays - listas de valores
	
	const listaDeMaterias = ['HTML', 'CSS', 'Javascript']
	
	listaDeMaterias
	> 0: "HTML"
	> 1: "CSS"
	> 2: "Javascript"
	> length: 3 

	listaDeMaterias[1(valor para chamar um item da lista(indice))]
	> 'CSS'
	
	listaDeMaterias.push('jQuery') - adiciona um item a lista
	> 4

	listaDeMaterias 
	> (4) ['HTML', 'CSS', 'Javascript', JQuery]
	> 0: "HTML"
	> 1: "CSS"
	> 2: "Javascript"
	> 3: "JQuery"
	> length: 4

	listaDeMaterias.splice(1(valor índice), 1) - retira um item da lista
	> ['CSS']
	
	listaDeMaterias
	> (3) ['HTML', 'Javascript', 'JQuery']
	> 0: "HTML"
	> 1: "Javascript"
	> 2: "JQuery"
	> length: 3

	
Estrutura de Repetição e Laços

*1* comando para o computador imprimir nomes na tela.

	For(let i = 0; i < (nome da lista).length; i++){
	 *1* console.log("o nome é: " + nomes[i])
	}

	let saudações = 0
	
	While(enquanto)(saudações < (nome da lista).length){
		console.log ("O nome é: " + (nome da lista)[saudaçoes])
		saudações++
	}

Condicionais

prompt é uma função de caixa de dialogo que é possível digitar dentro dela

	let idade = prompt('Bem vindo ao sistema eleitoral! Digite sua idade para seguir com o cadastramento')
	
	if(idade >= 16){
		alert('Certo! Vamos prosseguir com o cadastramento')
	} else {
		alert('Para prosseguir, o eleitor deve ter no mínimo 16 anos.')
	}

Funções - tarefas reutilizáveis no código
	

*1* return faz com que a função apresente os dados / ordens que demos a ela


	function descobrirIdade(anoNascimento) {
		*1*return 2024 - (anoNascimento)
	}
	
	descobrirIdade(2005) - o console já entende que é uma função
	> 19


Escopo e Closures - as variáveis podem ser declaradas dentro da função, 
		    mas não poderão ser utilizadas fora da função

	function apresentandoAlguém(){
		let nome = "Bruno"
		function saudação() {
			console.log(`Olá, ${nome}!`)
		}
		funtion despedida {
			console.log(`Até mais, ${nome}!`)
		}
		return {
			saudação: saudacao,
			despedida: despedida
		}
	}
	
	const pessoa = apresentandoAlguem()

	pessoa.saudacao()
	> Olá, Bruno!

	pessoa.despedida()
	> Até mais, Bruno!

	
	